# It s an example please use your values
# you can checkout the values with this command
#
# helm show values bitnami-pre-2022/mongodb --version 10.30.6
#
#
image: {}
  # tag: FromTerraform #4.2.21-debian-10-r8

podLabels:
  service.app.axway.com/fm-mongodb: both

podSecurityContext:
  enabled: true
  runAsUser: 1001
  fsGroup: 1001

# tolerations:
# - key: "workload"
#   operator: "Equal"
#   value: "apps"
#   effect: "NoSchedule"
# nodeSelector:
#   node.kubernetes.io/instancegroup: apps
#   beta.kubernetes.io/os: linux

# commonAnnotations:
#     seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
#     seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'

# annotations:
#   seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'

# podAnnotations:
#   seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'

architecture: replicaset
useStatefulSet: true

podSecurityPolicy:
  create: true

rbac:
  create: true

auth:
  enabled: true
  #
  # Options for access
  # rootPassword: "FromSecret"
  # usernames: "FromTerraform"
  # passwords: "FromSecret"
  # databases: "FromTerraform"
  # replicaSetName: "FromTerraform"
  # replicaSetKey: "FromSecret"
  existingSecret: mongodb-secret-env-vars

# enable encryptiom or not
tls:
  # can be activate for TLS/SSL
  enabled: true
  autoGenerated: false
  mode: requireTLS
  existingSecret: mongodb-secret-files

extraFlags:
  # - --tlsMode=requireTLS
  # - --tlsCertificateKeyFile=/certs/mongodb.pem
  # - --tlsCAFile=/certs/mongodb-ca-cert
  - --tlsAllowConnectionsWithoutCertificates

# when there is more than 1 DB
directoryPerDB: true
replicaCount: 2

persistence:
  enabled: false
  size: 20Gi
  storageClass: local-storage


volumePermissions:
  enabled: false


livenessProbe:
  enabled: false
customLivenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 20
  timeoutSeconds: 10
  failureThreshold: 6
  successThreshold: 1
  exec:
    command:
    - sh
    - -c
    - mongo ${MONGODB_CLIENT_EXTRA_FLAGS} --host $MONGODB_ADVERTISED_HOSTNAME --port $MONGODB_PORT_NUMBER --eval "db.adminCommand('ping')"
readinessProbe:
  enabled: false
customReadinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
  exec:
    command:
    - sh
    - -c
    - mongo ${MONGODB_CLIENT_EXTRA_FLAGS} --host $MONGODB_ADVERTISED_HOSTNAME --port $MONGODB_PORT_NUMBER --eval 'db.isMaster().ismaster || db.isMaster().secondary' | grep -q 'true'

arbiter:
  podLabels:
    service.app.axway.com/fm-mongodb: both

  podSecurityContext:
    enabled: true
    runAsUser: 1001
    fsGroup: 1001

  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    capabilities:
      drop:
        - ALL

  # podAnnotations:
  #   seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'

  # tolerations:
  # - key: "workload"
  #   operator: "Equal"
  #   value: "utilities"
  #   effect: "NoSchedule"

  # nodeSelector:
  #   node.kubernetes.io/instancegroup: utilities
  #   beta.kubernetes.io/os: linux